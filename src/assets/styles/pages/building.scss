#building-page {
  padding: 0 var(--padding) 0 var(--padding);
  h1 {
    @include main-text-b($text-dark);
    @include title-after($text-dark);
    position: relative;
    margin-bottom: 72px;
    &::after {
      left: 16px;
    }
  }
}
.building-status {
  width: 100%;
  display: flex;
  &__text {
    width: 50%;
    background-image: url('../images/building-bg.svg');
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    padding: 100px 108px 0 var(--padding);
    display: flex;
    justify-content: space-between;
    .text {
      width: 60%;
      h4 {
        @include main-text-m;
        color: #ffffff;
        margin-bottom: 20px;
      }
      p {
        @include main-text-s(#ffffff);
      }
    }
    .text-section {
      width: 26%;
      .section-list {
        display: flex;
        flex-direction: column;
      }
      .section-item {
        margin-bottom: 40px;
        h4 {
          @include main-text-m;
          color: #ffffff;
          margin-bottom: 20px;
        }
        p {
          @include main-text-s(#ffffff);
        }
      }
    }
  }
  &__percent {
    width: 50%;
    background-image: url('../images/patern-drops.png');
    background-position: center;
    background-image: cover;
    border: 1px solid #292935;
    border-bottom: none;
    padding: 100px 90px 70px 90px;
    .percent-list {
      column-count: 2;
    }
    .percent-item {
      display: flex;
      align-items: center;
      margin-bottom: 50px;
      .text {
        margin-left: 20px;
        @include main-text-s(#292935);
      }
    }
  }
}

@mixin percent-circle($diameter, $stroke-width, $fg-color, $bg-color) {
  $percent: attr(data-percent);
  $pi: 3.14159;
  $circumference: $diameter * $pi;
  $grey-color: lighten(desaturate($fg-color, 80%), 50%);

  // Make sure grey isn't white
  @if ($grey-color == #ffffff) {
    $grey-color: #efefef;
  }

  svg:before {
    content: $grey-color;
    display: block;
  }

  width: $diameter;
  height: $diameter;
  border-radius: 50%;
  overflow: hidden;
  position: relative;

  svg {
    width: $diameter;
    height: $diameter;
    //the dash starts at 3 o'clock so we need to rotate it back
    transform: rotate(90deg);

    .percent-circle-inner {
      fill: $grey-color;
      stroke: $fg-color;
      stroke-width: $stroke-width * 2;
      // this prop will get updated in js
      stroke-dasharray: 0 $circumference;
      transition: stroke-dasharray 0.8s ease-out;
    }
  }

  &:after {
    //write the percetage in straight from the data attribute
    content: $percent '%';
    display: block;
    width: $diameter - $stroke-width * 2;
    height: $diameter - $stroke-width * 2;
    background: $bg-color;
    position: absolute;
    top: $stroke-width;
    left: $stroke-width;
    border-radius: 50%;
    color: $fg-color;
    text-align: center;
    line-height: $diameter - ($stroke-width * 2);
    // font-size: ($diameter * 0.2);
    font-family: $default-font;
    font-weight: 500;
    font-size: 36px;
    line-height: 110%;
    letter-spacing: -0.03em;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

.pc3 {
  @include percent-circle(120px, 2px, #292935, #ffffff);
}

.hidden {
  display: none;
}
